name: Windows-Build

on: push

jobs:
  build-windows-image:
    name: 'Build Windows Image'
    runs-on: windows-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
      
      - name: 'Download GraalVM'
        run: |
          Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java11-windows-amd64-20.1.0.zip -OutFile 'graal.zip'
      
      - name: 'Install GraalVM'
        run: |
          Expand-Archive -path 'graal.zip' -destinationpath '.'
      
      - name: 'Install Native Image'
        run: |
          graalvm-ce-java11-20.1.0\bin\gu.cmd install native-image
      
      # - name: 'Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools'
      #   run: |
      #     choco install visualstudio2017-workload-vctools
      
      - name: 'Gui'
        run: |
          dir
      
      - name: 'Version'
        run: |
          ./mvnw.cmd --version

      - name: 'Packaging native'
        run: |
          ./mvnw.cmd -B clean package -Pnative -Dquarkus.native.container-build=false
          dir target

      # - name: 'Get Version Number'
      #   run: |
      #     echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"
      #   shell: bash
      
      # - name: 'Get JAR Artifact'
      #   uses: actions/download-artifact@v2-preview
      #   with:
      #     name: 'simple-socket-fn-logger-${{env.VERSION}}-all.jar'
      
      # - name: 'Build Native Image'
      #   shell: cmd
      #   env:
      #     JAVA_HOME: ./graalvm-ce-java11-20.1.0
      #   run: |
      #     call "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvars64.bat"
      #     ./graalvm-ce-java11-20.1.0/bin/native-image --no-server --no-fallback -H:ReflectionConfigurationResources=reflection-config.json -H:IncludeResources=logback.xml -H:Name=simple-socket-fn-logger-${{env.VERSION}}-all --allow-incomplete-classpath -jar simple-socket-fn-logger-${{env.VERSION}}-all.jar
      
      # - name: 'Get Release URL'
      #   if: contains(github.ref, 'v')
      #   uses: actions/download-artifact@v2-preview
      #   with:
      #     name: 'upload_url.txt'
      
      # - name: 'Get Upload URL'
      #   if: contains(github.ref, 'v')
      #   run: |
      #     echo "::set-env name=UPLOAD_URL::$(cat upload_url.txt)"
      #   shell: bash
      
      # - name: 'Publish Windows Image'
      #   if: success()
      #   uses: actions/upload-artifact@v2-preview
      #   with:
      #     name: 'simple-socket-fn-logger-${{env.VERSION}}-windows.exe'
      #     path: 'simple-socket-fn-logger-${{env.VERSION}}-all.exe'
      
      # - name: 'Release Windows Image Asset'
      #   if: success() && contains(github.ref, 'v')
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      #   with:
      #     upload_url: ${{env.UPLOAD_URL}}
      #     asset_name: 'simple-socket-fn-logger-${{env.VERSION}}-windows.exe'
      #     asset_path: 'simple-socket-fn-logger-${{env.VERSION}}-all.exe'
      #     asset_content_type: application/octet-stream